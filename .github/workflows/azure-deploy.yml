name: Deploy to Azure Web App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python version
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests (if any)
      run: |
        echo "Running tests..."
        # Add your test commands here
        
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: ${{ secrets.AZURE_WEBAPP_SLOT_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        
    - name: Logout from Azure
      run: |
        az logout
      if: always()

  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python version
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate configuration
      run: |
        echo "Validating configuration..."
        python -c "from app.chain import chain; print('Chain loaded successfully')"
        python -c "from app.document_processor import DocumentProcessor; print('DocumentProcessor loaded successfully')"
        
    - name: Check environment variables
      run: |
        echo "Checking required environment variables..."
        # Check if all required environment variables are documented
        if [ ! -f ".env.example" ]; then
          echo "Error: .env.example file is missing"
          exit 1
        fi
        
        required_vars=("PINECONE_API_KEY" "AZ_OPENAI_ENDPOINT" "AZ_OPENAI_API_KEY" "AZ_OPENAI_EMBEDDING_DEPLOYMENT" "AZ_OPENAI_CHAT_DEPLOYMENT")
        
        for var in "${required_vars[@]}"; do
          if ! grep -q "^$var=" .env.example; then
            echo "Error: Required variable $var is not documented in .env.example"
            exit 1
          fi
        done
        
        echo "All required environment variables are documented"
